{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Alert/Alert.module.css","components/Header/Header.module.css","transitions/slideList.module.css","transitions/slideAlert.module.css","components/App.module.css","transitions/slideTitle.module.css","components/Header/Header.js","redux/phonebookSelectors.js","components/ContactForm/ContactForm.js","redux/phonebookActions.js","redux/actionTypes.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Alert/Alert.js","components/App.js","redux/phonebookReducers.js","redux/store.js","index.js"],"names":["module","exports","Header","className","css","title","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","createSelector","contactsArr","filterValue","contact","name","toLowerCase","includes","trim","ContactForm","number","handleFormSubmit","e","preventDefault","props","addContact","handleAlert","some","clearInputs","id","uuidv4","handleChange","target","value","setState","this","onSubmit","form","htmlFor","label","type","input","placeholder","onChange","submit","Component","connect","selectors","dispatch","payload","Filter","inputFilter","length","container","text","deleteContact","actions","TransitionGroup","component","list","c","map","CSSTransition","key","timeout","classNames","slideTransitions","unmountOnExit","item","onClick","Alert","isAlert","in","App","isLoaded","setTimeout","fetchContacts","combineReducers","rootReducer","phonebookReducers","store","createStore","devToolsEnhancer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.61a64cd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3r1Vg\",\"label\":\"ContactForm_label__3Eitz\",\"input\":\"ContactForm_input__1IcRy\",\"submit\":\"ContactForm_submit__10eDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__31yow\",\"text\":\"Filter_text__27jeZ\",\"input\":\"Filter_input__1dqrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__r4n5X\",\"item\":\"ContactList_item__1OafX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Alert_container__1GICV\",\"text\":\"Alert_text__6IArz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2nmUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideList_enter__2yJlR\",\"enterActive\":\"slideList_enterActive__1X-uM\",\"exit\":\"slideList_exit__ZtJML\",\"exitActive\":\"slideList_exitActive__2D5ow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideAlert_enter__1F_t8\",\"enterActive\":\"slideAlert_enterActive__1tPjv\",\"exit\":\"slideAlert_exit__1ulci\",\"exitActive\":\"slideAlert_exitActive__3Ul4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2RqBp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideTitle_enter__ej0ey\",\"enterActive\":\"slideTitle_enterActive__1SMBJ\",\"exit\":\"slideTitle_exit__1K1V1\",\"exitActive\":\"slideTitle_exitActive__3TLlg\"};","import React from 'react';\nimport css from './Header.module.css';\n\nconst Header = () => {\n  return (\n    <>\n      <h2 className={css.title}>Phonebook</h2>\n    </>\n  );\n};\n\nexport default Header;\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contactsArr, filterValue) => {\n    return !filterValue\n      ? contactsArr\n      : contactsArr.filter(contact =>\n          contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()),\n        );\n  },\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid'; // usage - uuidv4();\nimport * as phonebookActions from '../../redux/phonebookActions';\nimport * as selectors from '../../redux/phonebookSelectors';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleAlert: PropTypes.func.isRequired,\n    addContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { addContact, contacts, handleAlert } = this.props;\n\n    if (!name) {\n      return;\n    }\n\n    const isNameInContacts = contacts.some(contact =>\n      contact.name.toLowerCase().includes(name.trim().toLowerCase()),\n    );\n\n    if (isNameInContacts) {\n      handleAlert();\n      this.clearInputs();\n      return;\n    }\n\n    addContact({\n      id: uuidv4(),\n      name,\n      number,\n    });\n    this.clearInputs();\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  clearInputs = () =>\n    this.setState({\n      name: '',\n      number: '',\n    });\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleFormSubmit} className={css.form}>\n        <label htmlFor=\"name\" className={css.label}>\n          Name\n          <input\n            type=\"text\"\n            className={css.input}\n            placeholder=\"Enter name...\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label htmlFor=\"number\" className={css.label}>\n          Number\n          <input\n            type=\"text\"\n            className={css.input}\n            placeholder=\"Enter number...\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <div>\n          <button type=\"submit\" className={css.submit}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: contact => dispatch(phonebookActions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import * as ActionType from './actionTypes';\n\nexport const fetchContacts = contacts => ({\n  type: ActionType.FETCH_CONTACTS,\n  payload: contacts,\n});\n\nexport const addContact = obj => ({\n  type: ActionType.ADD_CONTACT,\n  payload: obj,\n});\n\nexport const deleteContact = id => ({\n  type: ActionType.DELETE_CONTACT,\n  payload: id,\n});\n\nexport const inputFilter = value => ({\n  type: ActionType.INPUT_FILTER,\n  payload: value,\n});\n\nexport const filterContacts = filter => ({\n  type: ActionType.FILTER_CONTACTS,\n  payload: filter,\n});\n","export const FETCH_CONTACTS = 'FETCH_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\n\nexport const INPUT_FILTER = 'INPUT_FILTER';\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as selectors from '../../redux/phonebookSelectors';\nimport * as actions from '../../redux/phonebookActions';\n\nimport css from './Filter.module.css';\n\nclass Filter extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired,\n    ).isRequired,\n    filter: PropTypes.string.isRequired,\n    inputFilter: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    const { inputFilter } = this.props;\n    inputFilter(value);\n  };\n\n  render() {\n    const { filter, contacts } = this.props;\n\n    return (\n      contacts.length > 1 && (\n        <div className={css.container}>\n          <p className={css.text}>Find contacts by name</p>\n          <input\n            type=\"text\"\n            className={css.input}\n            placeholder=\"Enter name...\"\n            name=\"filter\"\n            value={filter}\n            onChange={this.handleChange}\n          />\n        </div>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  filter: selectors.getFilter(state),\n  contacts: selectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  inputFilter: e => dispatch(actions.inputFilter(e)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\n\nimport * as selectors from '../../redux/phonebookSelectors';\nimport * as actions from '../../redux/phonebookActions';\n\nimport css from './ContactList.module.css';\nimport slideTransitions from '../../transitions/slideList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={css.list} c>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={250}\n          classNames={slideTransitions}\n          unmountOnExit\n        >\n          <li className={css.item}>\n            <span>{`${contact.name}: ${contact.number}`}</span>\n            <button type=\"button\" onClick={() => deleteContact(contact.id)}>\n              Delete\n            </button>\n          </li>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: selectors.getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport css from './Alert.module.css';\nimport slideTransitions from '../../transitions/slideAlert.module.css';\n\nconst Alert = ({ isAlert }) => {\n  return (\n    <CSSTransition\n      in={isAlert}\n      timeout={250}\n      classNames={slideTransitions}\n      unmountOnExit\n    >\n      <div className={css.container}>\n        <p className={css.text}>Contact already exist!</p>\n      </div>\n    </CSSTransition>\n  );\n};\n\nAlert.propTypes = {\n  isAlert: PropTypes.bool.isRequired,\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport Header from './Header/Header';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport Alert from './Alert/Alert';\n\nimport * as phonebookActions from '../redux/phonebookActions';\nimport contacts from '../contacts.json';\n\nimport css from './App.module.css';\nimport slideTransitions from '../transitions/slideTitle.module.css';\n\nclass App extends Component {\n  static propTypes = {\n    fetchContacts: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isLoaded: false,\n    isAlert: false,\n  };\n\n  componentDidMount() {\n    const { isLoaded } = this.state;\n    this.setState({ isLoaded: !isLoaded });\n    const { fetchContacts } = this.props;\n    fetchContacts(contacts);\n  }\n\n  handleAlert = () => {\n    this.setState({ isAlert: true });\n    setTimeout(() => this.setState({ isAlert: false }), 2000);\n  };\n\n  render() {\n    const { isLoaded, isAlert } = this.state;\n\n    return (\n      <div className={css.container}>\n        <CSSTransition\n          in={isLoaded}\n          timeout={500}\n          classNames={slideTransitions}\n          unmountOnExit\n        >\n          <Header />\n        </CSSTransition>\n\n        <ContactForm handleAlert={this.handleAlert} />\n        <Filter />\n        <ContactList />\n        <Alert isAlert={isAlert} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: contactsArr =>\n    dispatch(phonebookActions.fetchContacts(contactsArr)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport * as ActionType from './actionTypes';\n\nconst contactsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_CONTACTS:\n      return payload;\n\n    case ActionType.ADD_CONTACT:\n      return [payload, ...state];\n\n    case ActionType.DELETE_CONTACT:\n      return state.filter(item => item.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case ActionType.INPUT_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport phonebookReducers from './phonebookReducers';\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducers,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}